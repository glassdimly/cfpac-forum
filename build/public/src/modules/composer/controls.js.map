{"version":3,"sources":["node_modules/nodebb-plugin-composer-default/static/lib/composer/controls.js"],"names":["define","preview","controls","insertIntoTextarea","textarea","value","payload","context","this","preventDefault","$","window","trigger","$textarea","currentVal","val","postContainer","parents","slice","selectionStart","render","wrapSelectionInTextareaWith","leading","trailing","undefined","matches","exec","selectionEnd","length","updateTextareaSelection","start","end","setSelectionRange","focus","getBlockData","textareaEl","query","replace","regex","RegExp","match","matchIndices","split","reduce","memo","line","push","index","in","cur","atEnd"],"mappings":"AAAA,aAIAA,OAAO,qBAAsB,oBAAqB,SAASC,GAC1D,IAAIC,KAKJA,EAASC,mBAAqB,SAASC,EAAUC,GAChD,IAAIC,GACHC,QAASC,KACTJ,SAAUA,EACVC,MAAOA,EACPI,eAAgB,OAEjBC,EAAEC,QAAQC,QAAQ,qCAAsCN,GAExD,GAAIA,EAAQG,eAAgB,CAC3B,OAGD,IAAII,EAAYH,EAAEJ,EAAQF,UAC1B,IAAIU,EAAaD,EAAUE,MAC3B,IAAIC,EAAgBH,EAAUI,QAAQ,0BAEtCJ,EAAUE,IACTD,EAAWI,MAAM,EAAGZ,EAAQF,SAASe,gBACrCb,EAAQD,MACRS,EAAWI,MAAMZ,EAAQF,SAASe,iBAGnClB,EAAQmB,OAAOJ,IAGhBd,EAASmB,4BAA8B,SAASjB,EAAUkB,EAASC,GAClE,GAAIA,IAAaC,UAAW,CAC3BD,EAAWD,EAGZ,IAAIT,EAAYH,EAAEN,GAClB,IAAIU,EAAaD,EAAUE,MAE3B,IAAIU,EAAU,yBAAyBC,KAAKZ,EAAWI,MAAMd,EAASe,eAAgBf,EAASuB,eAE/F,IAAKF,EAAQ,GAAI,CAEhBA,GAAW,KAAM,GAAIX,EAAWI,MAAMd,EAASe,eAAgBf,EAASuB,cAAe,IAGxFd,EAAUE,IACTD,EAAWI,MAAM,EAAGd,EAASe,gBAC7BM,EAAQ,GACRH,EACAG,EAAQ,GACRF,EACAE,EAAQ,GACRX,EAAWI,MAAMd,EAASuB,eAG3B,OAAQF,EAAQ,GAAGG,OAAQH,EAAQ,GAAGG,SAGvC1B,EAAS2B,wBAA0B,SAASzB,EAAU0B,EAAOC,GAC5D,IAAIzB,GACHC,QAASC,KACTJ,SAAUA,EACV0B,MAAOA,EACPC,IAAKA,EACLtB,eAAgB,OAEjBC,EAAEC,QAAQC,QAAQ,0CAA2CN,GAE7D,GAAIA,EAAQG,eAAgB,CAC3B,OAGDL,EAAS4B,kBAAkB1B,EAAQwB,MAAOxB,EAAQyB,KAClDrB,EAAEJ,EAAQF,UAAU6B,SAGrB/B,EAASgC,aAAe,SAAUC,EAAYC,EAAOjB,GAEpD,IAAId,EAAQ8B,EAAW9B,MACvB+B,EAAQA,EAAMC,QAAQ,sCAAuC,QAC7D,IAAIC,EAAQ,IAAIC,OAAOH,EAAO,KAC9B,IAAII,EACJ,IAAIC,KACJ,IAAInC,EAGJD,EAAQA,EAAMqC,MAAM,MAAMC,OAAO,SAAUC,EAAMC,GAChD,GAAID,IAAS,KAAM,CAClB,OAAOA,EAGRA,EAAOzB,GAAkB0B,EAAKjB,OAASiB,EAAO,KAE9C,GAAID,IAAS,KAAM,CAClBzB,EAAiBA,GAAkB0B,EAAKjB,OAAS,GAGlD,OAAOgB,GACL,MAGH,OAAOJ,EAAQF,EAAMZ,KAAKrB,MAAY,KAAM,CAC3CoC,EAAaK,KAAKN,EAAMO,OAGzBzC,GACC0C,MAAOP,EAAaE,OAAO,SAAUC,EAAMK,GAC1C,GAAI9B,GAAkB8B,EAAM,EAAG,CAC9BL,GAAQ,EAGT,OAAOA,GACL,GAAK,GACRM,MAAOT,EAAaE,OAAO,SAAUC,EAAMK,GAC1C,GAAIL,EAAM,CACT,OAAOA,EAGR,OAAOzB,IAAmB8B,GACxB,QAGJ3C,EAAQ4C,MAAQ5C,EAAQ0C,GAAK1C,EAAQ4C,MAAQ,MAC7C,OAAO5C,GAGR,OAAOJ","file":"node_modules/nodebb-plugin-composer-default/static/lib/composer/controls.js","sourcesContent":["\"use strict\";\n\n/*global define*/\n\ndefine('composer/controls', ['composer/preview'], function(preview) {\n\tvar controls = {};\n\n\t/*************************************************/\n\t/* Rich Textarea Controls                        */\n\t/*************************************************/\n\tcontrols.insertIntoTextarea = function(textarea, value) {\n\t\tvar payload = {\n\t\t\tcontext: this,\n\t\t\ttextarea: textarea,\n\t\t\tvalue: value,\n\t\t\tpreventDefault: false,\n\t\t};\n\t\t$(window).trigger('action:composer.insertIntoTextarea', payload);\n\n\t\tif (payload.preventDefault) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $textarea = $(payload.textarea);\n\t\tvar currentVal = $textarea.val();\n\t\tvar postContainer = $textarea.parents('[component=\"composer\"]');\n\n\t\t$textarea.val(\n\t\t\tcurrentVal.slice(0, payload.textarea.selectionStart) +\n\t\t\tpayload.value +\n\t\t\tcurrentVal.slice(payload.textarea.selectionStart)\n\t\t);\n\n\t\tpreview.render(postContainer);\n\t};\n\n\tcontrols.wrapSelectionInTextareaWith = function(textarea, leading, trailing){\n\t\tif (trailing === undefined) {\n\t\t\ttrailing = leading;\n\t\t}\n\n\t\tvar $textarea = $(textarea);\n\t\tvar currentVal = $textarea.val();\n\n\t\tvar matches = /^(\\s*)([\\s\\S]*?)(\\s*)$/.exec(currentVal.slice(textarea.selectionStart, textarea.selectionEnd));\n\n\t\tif (!matches[2]) {\n\t\t\t// selection is entirely whitespace\n\t\t\tmatches = [null, '', currentVal.slice(textarea.selectionStart, textarea.selectionEnd), ''];\n\t\t}\n\n\t\t$textarea.val(\n\t\t\tcurrentVal.slice(0, textarea.selectionStart) +\n\t\t\tmatches[1] +\n\t\t\tleading +\n\t\t\tmatches[2] +\n\t\t\ttrailing +\n\t\t\tmatches[3] +\n\t\t\tcurrentVal.slice(textarea.selectionEnd)\n\t\t);\n\n\t\treturn [matches[1].length, matches[3].length];\n\t};\n\n\tcontrols.updateTextareaSelection = function(textarea, start, end){\n\t\tvar payload = {\n\t\t\tcontext: this,\n\t\t\ttextarea: textarea,\n\t\t\tstart: start,\n\t\t\tend: end,\n\t\t\tpreventDefault: false,\n\t\t};\n\t\t$(window).trigger('action:composer.updateTextareaSelection', payload);\n\n\t\tif (payload.preventDefault) {\n\t\t\treturn;\n\t\t}\n\n\t\ttextarea.setSelectionRange(payload.start, payload.end);\n\t\t$(payload.textarea).focus();\n\t};\n\n\tcontrols.getBlockData = function (textareaEl, query, selectionStart) {\n\t\t// Determines whether the cursor is sitting inside a block-type element (bold, italic, etc.)\n\t\tvar value = textareaEl.value;\n\t\tquery = query.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\n\t\tvar regex = new RegExp(query, 'g');\n\t\tvar match;\n\t\tvar matchIndices = [];\n\t\tvar payload;\n\n\t\t// Isolate the line the cursor is on\n\t\tvalue = value.split('\\n').reduce(function (memo, line) {\n\t\t\tif (memo !== null) {\n\t\t\t\treturn memo;\n\t\t\t}\n\n\t\t\tmemo = selectionStart <= line.length ? line : null;\n\n\t\t\tif (memo === null) {\n\t\t\t\tselectionStart = selectionStart - (line.length + 1);\n\t\t\t}\n\n\t\t\treturn memo;\n\t\t}, null);\n\n\t\t// Find query characters and determine return payload\n\t\twhile((match = regex.exec(value)) !== null) {\n\t\t\tmatchIndices.push(match.index);\n\t\t}\n\n\t\tpayload = {\n\t\t\tin: !!(matchIndices.reduce(function (memo, cur) {\n\t\t\t\tif (selectionStart >= cur + 2) {\n\t\t\t\t\tmemo += 1;\n\t\t\t\t}\n\n\t\t\t\treturn memo;\n\t\t\t}, 0) % 2),\n\t\t\tatEnd: matchIndices.reduce(function (memo, cur) {\n\t\t\t\tif (memo) {\n\t\t\t\t\treturn memo;\n\t\t\t\t}\n\n\t\t\t\treturn selectionStart === cur;\n\t\t\t}, false),\n\t\t}\n\n\t\tpayload.atEnd = payload.in ? payload.atEnd : false;\n\t\treturn payload;\n\t}\n\n\treturn controls;\n});\n"]}