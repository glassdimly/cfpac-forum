{"version":3,"sources":["node_modules/nodebb-plugin-composer-default/static/lib/composer/drafts.js"],"names":["define","drafts","saveThrottleId","saving","init","postContainer","postData","bodyEl","find","draftIconEl","on","resetTimeout","setTimeout","saveDraft","$","this","toggleClass","window","e","open","localStorage","getItem","JSON","parse","console","warn","length","forEach","save_id","updateVisibility","clearTimeout","getDraft","get","title","text","raw","canSave","val","setItem","removeDraft","removeItem","set","add","idx","indexOf","push","splice","stringify"],"mappings":"AAAA,aAIAA,OAAO,kBAAmB,WAEzB,IAAIC,KACJ,IAAIC,EACJ,IAAIC,EAAS,MAEbF,EAAOG,KAAO,SAASC,EAAeC,GACrC,IAAIC,EAASF,EAAcG,KAAK,YAChC,IAAIC,EAAcJ,EAAcG,KAAK,eAErCD,EAAOG,GAAG,QAAS,WAClBC,IAEAT,EAAiBU,WAAW,WAC3BC,EAAUR,EAAeI,EAAaH,IACpC,OAGJG,EAAYC,GAAG,eAAgB,WAC9BI,EAAEC,MAAMC,YAAY,SAAU,SAG/BF,EAAEG,QAAQP,GAAG,SAAU,SAAUQ,GAEhC,IACC,IAAIC,EAAOC,aAAaC,QAAQ,eAChCF,EAAOG,KAAKC,MAAMJ,OACjB,MAAOD,GACRM,QAAQC,KAAK,kEACbN,KAED,GAAIA,EAAKO,OAAQ,CAChBP,EAAKQ,QAAQ,SAAUC,GACtB3B,EAAO4B,iBAAiB,OAAQD,SAMpC,SAASjB,IACR,GAAIT,EAAgB,CACnB4B,aAAa5B,GACbA,EAAiB,GAKnBD,EAAO8B,SAAW,SAASH,GAC1BJ,QAAQC,KAAK,8EACb,OAAOL,aAAaC,QAAQO,IAG7B3B,EAAO+B,IAAM,SAASJ,GACrB,OACCK,MAAOb,aAAaC,QAAQO,EAAU,UACtCM,KAAMd,aAAaC,QAAQO,KAI7B,SAASf,EAAUR,EAAeI,EAAaH,GAC9C,IAAI6B,EACJ,IAAIF,EAEJ,GAAIG,KAAa9B,GAAYA,EAASsB,SAAWvB,EAAcqB,OAAQ,CACtEO,EAAQ5B,EAAcG,KAAK,eAAe6B,MAC1CF,EAAM9B,EAAcG,KAAK,YAAY6B,MACrC,GAAIF,EAAIT,OAAQ,CACfN,aAAakB,QAAQhC,EAASsB,QAASO,GACvCf,aAAakB,QAAQhC,EAASsB,QAAU,SAAUK,GAClDxB,EAAYO,YAAY,SAAU,UAC5B,CACNf,EAAOsC,YAAYjC,EAASsB,WAK/B3B,EAAOsC,YAAc,SAASX,GAC7B,IAAKA,EAAS,CACb,OAEDjB,IAEAV,EAAO4B,iBAAiB,YAAaD,GACrC3B,EAAO4B,iBAAiB,OAAQD,GAEhCR,aAAaoB,WAAWZ,GACxBR,aAAaoB,WAAWZ,EAAU,UAClC,QAGD3B,EAAO4B,iBAAoB,SAAUY,EAAKb,EAASc,GAClD,IAAKN,MAAcR,EAAS,CAC3B,OAGD,IACC,IAAIT,EAAOC,aAAaC,QAAQ,UAAYoB,GAC5CtB,EAAOA,EAAOG,KAAKC,MAAMJ,MACxB,MAAOD,GACRM,QAAQC,KAAK,wDACb,IAAIN,KAEL,IAAIwB,EAAMxB,EAAKyB,QAAQhB,GAEvB,GAAIc,GAAOC,KAAS,EAAG,CACtBxB,EAAK0B,KAAKjB,QACJ,IAAKc,GAAOC,KAAS,EAAG,CAC9BxB,EAAK2B,OAAOH,EAAK,GAGlBvB,aAAakB,QAAQ,UAAYG,EAAKnB,KAAKyB,UAAU5B,KAGtD,SAASiB,IACR,GAAIjC,EAAQ,CACX,OAAOA,EAGR,IACCiB,aAAakB,QAAQ,OAAQ,QAC7BlB,aAAaoB,WAAW,QACxBrC,EAAS,KACT,OAAO,KACN,MAAMe,GACPf,EAAS,MACT,OAAO,OAIT,OAAOF","file":"node_modules/nodebb-plugin-composer-default/static/lib/composer/drafts.js","sourcesContent":["'use strict';\n\n/* globals define */\n\ndefine('composer/drafts', function() {\n\n\tvar drafts = {};\n\tvar\tsaveThrottleId;\n\tvar saving = false;\n\n\tdrafts.init = function(postContainer, postData) {\n\t\tvar bodyEl = postContainer.find('textarea');\n\t\tvar draftIconEl = postContainer.find('.draft-icon');\n\n\t\tbodyEl.on('keyup', function() {\n\t\t\tresetTimeout();\n\n\t\t\tsaveThrottleId = setTimeout(function() {\n\t\t\t\tsaveDraft(postContainer, draftIconEl, postData);\n\t\t\t}, 1000);\n\t\t});\n\n\t\tdraftIconEl.on('animationend', function () {\n\t\t\t$(this).toggleClass('active', false);\n\t\t});\n\n\t\t$(window).on('unload', function (e) {\n\t\t\t// Update visibility on all open composers\n\t\t\ttry {\n\t\t\t\tvar open = localStorage.getItem('drafts:open');\n\t\t\t\topen = JSON.parse(open) || [];\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn('[composer/drafts] Could not read list of open/available drafts');\n\t\t\t\topen = [];\n\t\t\t}\n\t\t\tif (open.length) {\n\t\t\t\topen.forEach(function (save_id) {\n\t\t\t\t\tdrafts.updateVisibility('open', save_id);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction resetTimeout() {\n\t\tif (saveThrottleId) {\n\t\t\tclearTimeout(saveThrottleId);\n\t\t\tsaveThrottleId = 0;\n\t\t}\n\t}\n\n\t// deprecated, for removal v1.14.x\n\tdrafts.getDraft = function(save_id) {\n\t\tconsole.warn('[composer/drafts] drafts.getDraft is deprecated! Use drafts.get() instead.');\n\t\treturn localStorage.getItem(save_id);\n\t};\n\n\tdrafts.get = function(save_id) {\n\t\treturn {\n\t\t\ttitle: localStorage.getItem(save_id + ':title'),\n\t\t\ttext: localStorage.getItem(save_id),\n\t\t}\n\t}\n\n\tfunction saveDraft(postContainer, draftIconEl, postData) {\n\t\tvar raw;\n\t\tvar title;\n\n\t\tif (canSave() && postData && postData.save_id && postContainer.length) {\n\t\t\ttitle = postContainer.find('input.title').val();\n\t\t\traw = postContainer.find('textarea').val();\n\t\t\tif (raw.length) {\n\t\t\t\tlocalStorage.setItem(postData.save_id, raw);\n\t\t\t\tlocalStorage.setItem(postData.save_id + ':title', title);\n\t\t\t\tdraftIconEl.toggleClass('active', true);\n\t\t\t} else {\n\t\t\t\tdrafts.removeDraft(postData.save_id);\n\t\t\t}\n\t\t}\n\t}\n\n\tdrafts.removeDraft = function(save_id) {\n\t\tif (!save_id) {\n\t\t\treturn;\n\t\t}\n\t\tresetTimeout();\n\t\t// Remove save_id from list of open and available drafts\n\t\tdrafts.updateVisibility('available', save_id);\n\t\tdrafts.updateVisibility('open', save_id);\n\n\t\tlocalStorage.removeItem(save_id);\n\t\tlocalStorage.removeItem(save_id + ':title');\n\t\treturn;\n\t};\n\n\tdrafts.updateVisibility =  function (set, save_id, add) {\n\t\tif (!canSave() || !save_id) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tvar open = localStorage.getItem('drafts:' + set);\n\t\t\topen = open ? JSON.parse(open) : [];\n\t\t} catch (e) {\n\t\t\tconsole.warn('[composer/drafts] Could not read list of open drafts');\n\t\t\tvar open = [];\n\t\t}\n\t\tvar idx = open.indexOf(save_id);\n\n\t\tif (add && idx === -1) {\n\t\t\topen.push(save_id);\n\t\t} else if (!add && idx !== -1) {\n\t\t\topen.splice(idx, 1);\n\t\t}\t// otherwise do nothing\n\n\t\tlocalStorage.setItem('drafts:' + set, JSON.stringify(open));\n\t};\n\n\tfunction canSave() {\n\t\tif (saving) {\n\t\t\treturn saving;\n\t\t}\n\n\t\ttry {\n\t\t\tlocalStorage.setItem('test', 'test');\n\t\t\tlocalStorage.removeItem('test');\n\t\t\tsaving = true;\n\t\t\treturn true;\n\t\t} catch(e) {\n\t\t\tsaving = false;\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn drafts;\n});"]}