{"version":3,"sources":["node_modules/nodebb-plugin-composer-default/static/lib/composer/tags.js"],"names":["define","tags","init","postContainer","postData","tagEl","find","length","tagsinput","maxTags","config","maximumTagsPerTopic","maxChars","maximumTagLength","confirmKeys","trimValue","on","event","cleanTag","utils","cleanUpTag","item","different","cancel","minimumTagLength","app","alertError","cid","hasOwnProperty","ajaxify","data","socket","emit","tag","err","allowed","message","$","window","trigger","addTags","input","toggleTagInput","loadJQueryUI","autocomplete","delay","position","my","at","collision","appendTo","open","this","css","source","request","response","query","term","attr","select","ui","triggerEnter","onChangeCategory","get","relative_path","tagDropdown","toggleClass","tagWhitelist","parseAndTranslate","html","slice","forEach","indexOf","removeAttr","privileges","tagsInput","e","jQuery","Event","which","keyCode","setTimeout","i","getTags","post_uuid"],"mappings":"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","file":"node_modules/nodebb-plugin-composer-default/static/lib/composer/tags.js","sourcesContent":["\n'use strict';\n\n/*globals ajaxify, define, config, socket, app, utils*/\n\ndefine('composer/tags', function() {\n\tvar tags = {};\n\n\ttags.init = function(postContainer, postData) {\n\t\tvar tagEl = postContainer.find('.tags');\n\t\tif (!tagEl.length) {\n\t\t\treturn;\n\t\t}\n\n\t\ttagEl.tagsinput({\n\t\t\tmaxTags: config.maximumTagsPerTopic,\n\t\t\tmaxChars: config.maximumTagLength,\n\t\t\tconfirmKeys: [13, 44],\n\t\t\ttrimValue: true\n\t\t});\n\n\t\ttagEl.on('beforeItemAdd', function(event) {\n\t\t\tvar cleanTag = utils.cleanUpTag(event.item, config.maximumTagLength);\n\t\t\tvar different = cleanTag !== event.item;\n\t\t\tevent.cancel = different || event.item.length < config.minimumTagLength || event.item.length > config.maximumTagLength;\n\t\t\tif (event.item.length < config.minimumTagLength) {\n\t\t\t\treturn app.alertError('[[error:tag-too-short, ' + config.minimumTagLength + ']]');\n\t\t\t} else if (event.item.length > config.maximumTagLength) {\n\t\t\t\treturn app.alertError('[[error:tag-too-long, ' + config.maximumTagLength + ']]');\n\t\t\t}\n\t\t\tif (different) {\n\t\t\t\ttagEl.tagsinput('add', cleanTag);\n\t\t\t}\n\t\t});\n\n\t\ttagEl.on('itemAdded', function(event) {\n\t\t\tvar cid = postData.hasOwnProperty('cid') ? postData.cid : ajaxify.data.cid;\n\t\t\tsocket.emit('topics.isTagAllowed', { tag: event.item, cid: cid || 0}, function(err, allowed) {\n\t\t\t\tif (err) {\n\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t}\n\t\t\t\tif (!allowed) {\n\t\t\t\t\treturn tagEl.tagsinput('remove', event.item);\n\t\t\t\t}\n\t\t\t\t$(window).trigger('action:tag.added', {cid: cid, tagEl: tagEl, tag: event.item});\n\t\t\t});\n\t\t});\n\n\t\taddTags(postData.tags, tagEl);\n\n\t\tvar input = postContainer.find('.bootstrap-tagsinput input');\n\t\ttoggleTagInput(postContainer, postData, ajaxify.data);\n\n\t\tapp.loadJQueryUI(function() {\n\t\t\tinput.autocomplete({\n\t\t\t\tdelay: 100,\n\t\t\t\tposition: { my: \"left bottom\", at: \"left top\", collision: \"flip\" },\n\t\t\t\tappendTo: postContainer.find('.bootstrap-tagsinput'),\n\t\t\t\topen: function() {\n\t\t\t\t\t$(this).autocomplete('widget').css('z-index', 20000);\n\t\t\t\t},\n\t\t\t\tsource: function(request, response) {\n\t\t\t\t\tsocket.emit('topics.autocompleteTags', {query: request.term, cid: postData.cid}, function(err, tags) {\n\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\treturn app.alertError(err.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tags) {\n\t\t\t\t\t\t\tresponse(tags);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t$('.ui-autocomplete a').attr('data-ajaxify', 'false');\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tselect: function(event, ui) {\n\t\t\t\t\t// when autocomplete is selected from the dropdown simulate a enter key down to turn it into a tag\n\t\t\t\t\ttriggerEnter(input);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tinput.attr('tabIndex', tagEl.attr('tabIndex'));\n\t\tinput.on('blur', function() {\n\t\t\ttriggerEnter(input);\n\t\t});\n\n\t\t$('[component=\"composer/tag/dropdown\"]').on('click', 'li', function () {\n\t\t\tvar tag = $(this).attr('data-tag');\n\t\t\tif (tag) {\n\t\t\t\taddTags([tag], tagEl);\n\t\t\t}\n\t\t\treturn false;\n\t\t});\n\t};\n\n\ttags.onChangeCategory = function (postContainer, postData, cid) {\n\t\t$.get(config.relative_path + '/api/category/' + cid, function (data) {\n\t\t\tvar tagDropdown = postContainer.find('[component=\"composer/tag/dropdown\"]');\n\t\t\tif (!tagDropdown.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttoggleTagInput(postContainer, postData, data);\n\t\t\ttagDropdown.toggleClass('hidden', !data.tagWhitelist || !data.tagWhitelist.length);\n\t\t\tif (data.tagWhitelist) {\n\t\t\t\tapp.parseAndTranslate('composer', 'tagWhitelist', { tagWhitelist: data.tagWhitelist }, function (html) {\n\t\t\t\t\ttagDropdown.find('.dropdown-menu').html(html);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t};\n\n\tfunction toggleTagInput(postContainer, postData, data) {\n\t\tvar tagEl = postContainer.find('.tags');\n\t\tvar input = postContainer.find('.bootstrap-tagsinput input');\n\t\tif (!input.length) {\n\t\t\treturn;\n\t\t}\n\t\tif (data.tagWhitelist && data.tagWhitelist.length) {\n\t\t\tinput.attr('readonly', '');\n\t\t\tinput.attr('placeholder', '');\n\n\t\t\ttagEl.tagsinput('items').slice().forEach(function (tag) {\n\t\t\t\tif (data.tagWhitelist.indexOf(tag) === -1) {\n\t\t\t\t\ttagEl.tagsinput('remove', tag);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tinput.removeAttr('readonly');\n\t\t\tinput.attr('placeholder', postContainer.find('input.tags').attr('placeholder'));\n\t\t}\n\n\t\tpostContainer.find('.tags-container').toggleClass('hidden', (data.privileges && data.privileges.hasOwnProperty('topics:tag') && !data.privileges['topics:tag']) || (config.maximumTagsPerTopic === 0 && !postData.tags.length));\n\n\t\tif (data.privileges && data.privileges.hasOwnProperty('topics:tag') && !data.privileges['topics:tag']) {\n\t\t\ttagEl.tagsinput('removeAll');\n\t\t}\n\n\t\t$(window).trigger('action:tag.toggleInput', {\n\t\t\tpostContainer: postContainer,\n\t\t\ttagWhitelist: data.tagWhitelist,\n\t\t\ttagsInput: input,\n\t\t});\n\t}\n\n\tfunction triggerEnter(input) {\n\t\t// http://stackoverflow.com/a/3276819/583363\n\t\tvar e = jQuery.Event('keypress');\n\t\te.which = 13;\n\t\te.keyCode = 13;\n\t\tsetTimeout(function() {\n\t\t\tinput.trigger(e);\n\t\t}, 100);\n\t}\n\n\tfunction addTags(tags, tagEl) {\n\t\tif (tags && tags.length) {\n\t\t\tfor (var i=0; i<tags.length; ++i) {\n\t\t\t\ttagEl.tagsinput('add', tags[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\ttags.getTags = function(post_uuid) {\n\t\treturn $('.composer[data-uuid=\"' + post_uuid + '\"]' + ' .tags').tagsinput('items');\n\t};\n\n\treturn tags;\n});\n"]}